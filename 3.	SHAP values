data_X_train = pd.DataFrame(X_train)
data_X_train.columns = Names

shap_data = shap.TreeExplainer(forest_reg).shap_values(X_train)

def ABS_SHAP(df_shap,df):
    shap_v = pd.DataFrame(df_shap)
    feature_list = df.columns
    shap_v.columns = feature_list
    df_v = df.copy().reset_index().drop('index',axis=1)

    # Determine the correlation in order to plot with different colors
    corr_list = list()
    for i in feature_list:
        b = np.corrcoef(shap_v[i], df_v[i])[1][0]
        corr_list.append(b)
    corr_df = pd.concat([pd.Series(feature_list),pd.Series(corr_list)],axis=1).fillna(0)

    corr_df.columns = ['Variable','Corr']
    corr_df['Sign'] = np.where(corr_df['Corr'] > 0, 'red','blue')

    shap_abs = np.abs(shap_v)
    k = pd.DataFrame(shap_abs.mean()).reset_index()
    k.columns = ['Variable', 'SHAP_abs']
    k2 = k.merge(corr_df, left_on = 'Variable',right_on='Variable',how='inner')
    k2 = k2.sort_values(by='SHAP_abs',ascending = True)
    colorlist = k2['Sign']
    ax = k2.plot.barh(x='Variable',y='SHAP_abs',color = colorlist, figsize=(5,6),legend=False)

    plt.xticks(fontsize=10, fontproperties='Arial')
    ax.set_xlabel("SHAP Value (Red = Positive Impact)",fontproperties='Arial', fontsize=12, fontweight='bold')
    ax.set_ylabel("Variable", fontproperties='Arial', fontsize=12, fontweight='bold')
    plt.show()

ABS_SHAP(shap_data,data_X_train_0)
plt.savefig("SHAP value.tiff",dpi=330,bbox_inches='tight') 
